{"version":3,"sources":["searchBar.js","addcomment.js","weatherDetails.js","navbar.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","props","state","cityName","handleSearchInput","bind","e","this","setState","target","value","console","log","searchCity","style","textAlign","placeholder","fontSize","width","background","boxShadow","borderRadius","border","color","boxSizing","onChange","updateCityName","onClick","cursor","Component","AddComment","comments","userComment","postComment","length","push","listOfComments","map","eachComment","class","aria-hidden","padding","fontFamily","marginRight","updateUserComment","float","display","WeatherDetails","dateNow","Date","weatherIcon","marginTop","marginLeft","cityCountry","toDateString","flexDirection","paddingLeft","paddingTop","cityTemperature","src","cityWeatherDescription","cityWind","cityHumidity","cityPressure","cityMaxTmp","cityMinTmp","citySunrise","citySunset","paddingBottom","NavBar","margin","height","WeatherApp","cityNameFound","cityNameError","loadingIndicator","name","that","fetch","then","response","json","cod","sunrise","sys","toLocaleTimeString","sunset","main","temp","weather","wind","speed","humidity","temp_max","temp_min","pressure","icon","country","showErrorMessage","showTemperatureDetails","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ee7d25b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SearchBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            cityName : null,\r\n            }\r\n        this.handleSearchInput = this.handleSearchInput.bind(this);\r\n      }\r\n      updateCityName(e) {\r\n        this.setState({ cityName: e.target.value })\r\n      }\r\n\r\nhandleSearchInput() {\r\n    console.log('handleSearchInput fired');\r\n    this.props.searchCity(this.state.cityName);\r\n}\r\n  render() {\r\n    return (\r\n      <div\r\n      style={{textAlign: 'center'}}>\r\n<input\r\n\t\t\t\t\t\t\t\t\tplaceholder=\"Enter City Name...\"\r\n                  value={this.state.cityName}\r\n                  // style={{background: '#FFFFFF',  padding: '10px', marginTop: '10px'   , marginLeft: '20%',  marginRight: '20%'}}\r\n\r\n                  style={{ fontSize: '28px' ,width: '600px', background: '#FFFFFF', boxShadow: '0px 4px 32px rgba(143, 143, 143, 0.4)', borderRadius: '4px', border: '1px solid #E5E5E5', color: '#8C8C99' , boxSizing: 'border-box', borderRadius: '4px', padding: '5px'}}\r\n\t\t\t\t\t\t\t\t\tonChange={e => this.updateCityName(e)}\r\n\t\t\t\t\t\t\t\t/>  \r\n    <button \r\n       onClick={this.handleSearchInput}\r\n       style={{ background: '#3251ED', color: 'white', fontSize: '33px',cursor: 'pointer' , boxShadow: '0px 4px 32px rgba(143, 143, 143, 0.4)', borderRadius: '4px',}}\r\n      //  style={{ fontSize: '24px', textAlign: 'center', marginTop: '30px', backgroundColor: '#fff' , }}\r\n        >Search</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nSearchBar.propTypes = {\r\n    searchCity: PropTypes.func\r\n  };\r\nexport default SearchBar;","import React, { Component } from 'react';\r\n\r\nclass AddComment extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            comments : [],\r\n            userComment:null,\r\n            }\r\n        this.postComment = this.postComment.bind(this);\r\n      }\r\n      updateUserComment(e) {\r\n        this.setState({ userComment: e.target.value })\r\n      }\r\n      postComment() {\r\n        if((this.state.userComment.length))\r\n        {\r\n          this.setState({\r\n            userComment: \"\",\r\n        })\r\n        console.log('postComment fired');\r\n        this.state.comments.push(this.state.userComment);\r\n        }\r\n    }\r\n  render() {\r\n    const listOfComments = this.state.comments.map(eachComment => (\r\n        <p \r\n        style={{   textAlign: 'left' }}\r\n        >\r\n        <i class=\"fa fa-user\" aria-hidden=\"true\"></i> {eachComment}\r\n        </p>\r\n    ))\r\n    return (\r\n     <div>\r\n        <div style={{}}>\r\n          <div \r\n          >\r\n          <div \r\n                    style={{border: '1px solid white', padding: '10px', fontFamily: ' Roboto,sans-serif'}}\r\n                    >\r\n            <textarea\r\n          placeholder=\"Enter your comment here...\"\r\n          value={this.state.userComment}\r\n          style={{ fontSize: '24px' , background: '#f7f2ff', width: '97%' ,  border: '1px solid #E5E5E5', borderRadius: '4px', padding: '10px', marginRight: '20px'}}\r\n          onChange={e => this.updateUserComment(e)}>\r\n          </textarea>                   \r\n<br/>\r\n    <button \r\n       onClick={this.postComment}\r\n       style={{ background: '#3251ED', color: 'white', fontSize: '24px',cursor: 'pointer', float: 'left'}}\r\n\r\n      //  style={{ fontSize: '24px', background: '#fff' , cursor: 'pointer', float: 'left'}}\r\n        >Comment</button>\r\n        <br/>\r\n        <br/>\r\n                 <div\r\n                  style={{ background: '#f7f2ff', padding: '10px',}}>\r\n                 <p style={{textAlign: 'left', display: 'block', color:'rgb(80, 80, 80)'}}><b>Comments ({listOfComments.length})</b> </p> \r\n                  {listOfComments}\r\n                 </div>\r\n\r\n            </div>\r\n          </div>\r\n      </div>\r\n     \r\n     </div>\r\n    );\r\n  }\r\n}\r\nexport default AddComment;","import React, { Component } from 'react';\r\nimport AddComment from './addcomment.js'\r\nclass WeatherDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n      }\r\n\r\n  render() {\r\n    let dateNow = new Date();\r\n    let weatherIcon = \"http://openweathermap.org/img/w/\" + this.props.weatherIcon + \".png\"\r\n    return (\r\n   <div>\r\n        <div\r\n      style={{background: '#FFFFFF', boxShadow: '0px 4px 32px rgba(143, 143, 143, 0.4)', borderRadius: '4px', padding: '10px', marginTop: '10px'   , marginLeft: '15%',  marginRight: '15%'}}\r\n      >\r\n      <span\r\n       style={{ fontSize: '20px', color: '#505050' }}>\r\n\r\n       {this.props.cityName}, {this.props.cityCountry},  {dateNow.toDateString()} \r\n      </span>\r\n    <br/>\r\n      <div\r\n      style={{display: 'flex',flexDirection: 'row'}}>\r\n      <div\r\n      style={{  width: '60%' , paddingLeft: '5%', paddingTop: '58px'}}>\r\n             <h1> <span  style={{ color: '#505050', fontSize: '100px' }}> {this.props.cityTemperature}&deg;C               <img src={weatherIcon}/>\r\n</span> </h1>\r\n      </div>\r\n      <div\r\n      style={{  width: '40%', paddingTop: '30px'}}>\r\n        <p style={{color: '#505050', marginTop:'-25px', fontSize: '22px'}}>\r\n         Weather: <b>{this.props.cityWeatherDescription}</b><br/>\r\n         Wind:  <b>{this.props.cityWind} km/hr</b> \r\n        <br/>\r\n        <br/>\r\n        Humidity: <b>{this.props.cityHumidity}%</b> <br/>\r\n        Pressure: <b> {this.props.cityPressure} Pa</b>\r\n       <br/>\r\n       <br/>\r\n         Max Temp: <b>{this.props.cityMaxTmp}&deg;C </b><br/>\r\n         Min Temp: <b>{this.props.cityMinTmp}&deg;C</b>\r\n        <br/> <br/>\r\n        Sunrise : <b> {this.props.citySunrise}</b><br/>\r\n        Sunset: <b> {this.props.citySunset}</b>\r\n       <br/>\r\n        </p>\r\n\r\n      </div>\r\n      </div>\r\n      </div>\r\n      <div\r\n      style={{background: '#FFFFFF', boxShadow: '0px 4px 32px rgba(143, 143, 143, 0.4)', borderRadius: '4px', padding: '10px', marginTop: '10px' ,  paddingBottom: '10px'  , marginLeft: '15%',  marginRight: '15%'}}\r\n\r\n      >\r\n               <AddComment></AddComment>\r\n      \r\n      </div>\r\n      <br/>\r\n      <br/>\r\n   </div>\r\n    );\r\n  }\r\n}\r\nexport default WeatherDetails;\r\n\r\n","import React, { Component } from 'react';\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            }\r\n      }\r\n  render() {\r\n    return (\r\n      <div\r\n      style={{width:  '100%' , padding: '0px !important', margin: '0px !important', paddingTop: '10px', paddingLeft: '10px',  background:  'rgb(50, 81, 237)', height: '55px'}}>\r\n     <span style={{color: 'white' , fontSize: '34px'}}>Weather App</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NavBar;","import React, { Component } from 'react';\r\nimport SearchBar from './searchBar';\r\nimport WeatherDetails from './weatherDetails.js';\r\nimport NavBar from './navbar.js'\r\n// import AddComment from './addcomment.js'\r\n\r\nclass WeatherApp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        cityNameFound: null,\r\n        cityNameError: false,\r\n        loadingIndicator: false,\r\n        cityName : null,\r\n        cityTemperature: null,\r\n        cityWeatherDescription: null,\r\n        cityWind: null,\r\n        cityHumidity: null,\r\n        cityMaxTmp: null,\r\n        cityMinTmp: null,\r\n        cityPressure: null,\r\n        citySunrise: null,\r\n        citySunset:  null,\r\n        cityCountry: null,\r\n\r\n      }\r\n    console.log(\"Constructor of WeatherApp class loaded.\");\r\n    this.searchCity = this.searchCity.bind(this);\r\n  }\r\n\r\n  searchCity(name) {\r\n    this.setState({\r\n      cityNameFound: false,\r\n      loadingIndicator: true,\r\n      cityNameError: false\r\n    })\r\n\r\nlet that = this;\r\n\r\n  fetch('https://api.openweathermap.org/data/2.5/weather?q='+name+\"&appid=80186bc6ef5c092a7aa7bcdb10ea8c80&units=metric\")\r\n  .then(function(response) {\r\n    return response.json();\r\n  })\r\n  .then(function(response) {\r\n    if(response.cod === \"404\") {\r\n        that.setState({\r\n          cityNameFound: false,\r\n          cityNameError: true,\r\n          loadingIndicator: false\r\n        })\r\n      }\r\n    else if(response.cod === 200) {\r\n      console.log(\"Response from openweathermap api \" , response);\r\n      let sunrise =  new Date(response.sys.sunrise*1000).toLocaleTimeString();\r\n      let sunset =  new Date(response.sys.sunset*1000).toLocaleTimeString();\r\n      // console.log(\"sunrise \" ,sunrise);\r\n\r\n      // sunrise = sunrise.getTime();\r\n      // sunset = sunset.getTime();\r\n      // sunrise = sunrise.split(' ');\r\n      // sunrise = sunrise[0];\r\n      // sunset = sunset.split(' ');\r\n      // sunset = sunset[0];\r\n\r\n      // cityWeatherDescription = response.weather[0].description\r\n      that.setState({\r\n        cityNameFound: true,\r\n        cityNameError: false,\r\n        cityName: response.name,\r\n        cityTemperature: response.main.temp,\r\n        cityWeatherDescription: response.weather[0].main,\r\n        cityWind : response.wind.speed,\r\n        cityHumidity: response.main.humidity,\r\n        cityMaxTmp: response.main.temp_max,\r\n        cityMinTmp: response.main.temp_min,\r\n        cityPressure: response.main.pressure,\r\n        weatherIcon: response.weather[0].icon,\r\n        loadingIndicator: false,\r\n        cityCountry: response.sys.country,\r\n        citySunrise: sunrise,\r\n        citySunset: sunset\r\n\r\n      })\r\n\r\n    } \r\n  });\r\n  }\r\n  render() {\r\n    let showErrorMessage = this.state.cityNameError === true ? (\r\n      <div\r\n      style={{background: '#FFFFFF',  color: 'grey', textAlign:'center', boxShadow: '0px 4px 32px rgba(143, 143, 143, 0.4)', borderRadius: '4px', padding: '10px', marginTop: '10px' ,  paddingBottom: '10px'  , marginLeft: '15%',  marginRight: '15%'}}\r\n      >\r\n        <h4>City Name not found</h4>\r\n      </div>\r\n    ) : (''\r\n    )\r\n    let showTemperatureDetails  = this.state.cityNameFound === true ? (\r\n    <WeatherDetails \r\n    cityName={this.state.cityName} \r\n    cityTemperature={this.state.cityTemperature} \r\n    cityWeatherDescription = {this.state.cityWeatherDescription}\r\n    cityWind = {this.state.cityWind}\r\n    cityHumidity = {this.state.cityHumidity}\r\n    cityMaxTmp = {this.state.cityMaxTmp}\r\n    cityMinTmp = {this.state.cityMinTmp}\r\n    cityPressure = {this.state.cityPressure}\r\n    weatherIcon = {this.state.weatherIcon}\r\n    citySunset = {this.state.citySunset}\r\n    citySunrise = {this.state.citySunrise}\r\n    cityCountry = {this.state.cityCountry}\r\n\r\n    ></WeatherDetails>\r\n    \r\n    ) : (\r\n      this.state.loadingIndicator === true ? (\r\n        <div\r\n      style={{background: '#FFFFFF',  color: 'grey', textAlign:'justify', boxShadow: '0px 4px 32px rgba(143, 143, 143, 0.4)', borderRadius: '4px', padding: '10px', marginTop: '10px' ,  paddingBottom: '10px'  , marginLeft: '15%',  marginRight: '15%'}}\r\n      >\r\n        <h4>Searching City name...</h4>\r\n      </div>\r\n      ) : (' ')\r\n    )\r\n    return (\r\n      <div>\r\n        <NavBar></NavBar>\r\n        <br/>\r\n       <SearchBar searchCity={this.searchCity} ></SearchBar>\r\n       {showErrorMessage}\r\n      {showTemperatureDetails}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WeatherApp;\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}